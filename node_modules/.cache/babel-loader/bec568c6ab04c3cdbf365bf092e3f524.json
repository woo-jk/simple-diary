{"ast":null,"code":"var _jsxFileName = \"/Users/woo-jungkyun/Project/React_Study/simplediary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useState, useRef, useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\nimport OptimizeTest from \"./OptimizeTest\"; //useReducer에 들어가는 함수\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.data;\n      }\n\n    case \"CREATE\":\n      {\n        const created_date = new Date().getDate();\n        const newItem = { ...action.data,\n          created_date\n        };\n        return [newItem, ...state];\n      }\n\n    case \"REMOVE\":\n      {\n        return state.filter(it => it.id !== action.targerId);\n      }\n\n    case \"EDIT\":\n      {\n        return state.map(it => it.id === action.targerId ? { ...it,\n          content: action.newContent\n        } : it);\n      }\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  _s();\n\n  // const [data, setData] = useState([]);\n  // useState 대신 사용하는 useReducer\n  // useState 를 최적화해서 대신 사용하는 것이지만 useState를 사용해도 됨\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: \"INIT\",\n      data: initData\n    }); // useState 용\n    // setData(initData);\n  }; //처음 렌더링 될 때 실행함\n\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current\n      }\n    }); // useState 용\n    // const created_date = new Date().getTime();\n    // const newItem = {\n    //   author,\n    //   content,\n    //   emotion,\n    //   created_date,\n    //   id: dataId.current,\n    // };\n\n    dataId.current += 1; //새로운 일기가 제일 위로 가야하므로 spread보다 앞에\n    // setData((data) => [newItem, ...data]);\n  }, []);\n  const onRemove = useCallback(targetId => {\n    dispatch({\n      type: \"REMOVE\",\n      targetId\n    }); // useState 용\n    //   setData((data) => data.filter((it) => it.id !== targetId));\n  }, []);\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({\n      type: \"EDIT\",\n      targetId,\n      newContent\n    }); // useState 용\n    // setData((data) =>\n    //   data.map((it) =>\n    //     it.id === targetId ? { ...it, content: newContent } : it\n    //   )\n    // );\n  }, []);\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30 : \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84\\uC774 \\uC88B\\uC740 \\uC77C\\uAE30 \\uAC1C\\uC218 : \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84\\uC774 \\uB098\\uC05C \\uC77C\\uAE30 \\uAC1C\\uC218 : \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uBE44\\uC728 : \", goodRatio]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F0Fyqg4AmrFvw2PizzKMxEoq+hM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/woo-jungkyun/Project/React_Study/simplediary/src/App.js"],"names":["useCallback","useMemo","useState","useRef","useEffect","useReducer","DiaryEditor","DiaryList","Lifecycle","OptimizeTest","reducer","state","action","type","data","created_date","Date","getDate","newItem","filter","it","id","targerId","map","content","newContent","App","dispatch","dataId","getData","res","fetch","then","json","initData","slice","author","email","body","emotion","Math","floor","random","getTime","current","onCreate","onRemove","targetId","onEdit","getDiaryAnalysis","goodCount","length","badCount","goodRatio"],"mappings":"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","sourcesContent":["import {\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n  useEffect,\n  useReducer,\n} from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\nimport OptimizeTest from \"./OptimizeTest\";\n\n//useReducer에 들어가는 함수\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\": {\n      const created_date = new Date().getDate();\n      const newItem = {\n        ...action.data,\n        created_date,\n      };\n      return [newItem, ...state];\n    }\n    case \"REMOVE\": {\n      return state.filter((it) => it.id !== action.targerId);\n    }\n    case \"EDIT\": {\n      return state.map((it) =>\n        it.id === action.targerId ? { ...it, content: action.newContent } : it\n      );\n    }\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  // const [data, setData] = useState([]);\n\n  // useState 대신 사용하는 useReducer\n  // useState 를 최적화해서 대신 사용하는 것이지만 useState를 사용해도 됨\n  const [data, dispatch] = useReducer(reducer, []);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n    dispatch({ type: \"INIT\", data: initData });\n    // useState 용\n    // setData(initData);\n  };\n\n  //처음 렌더링 될 때 실행함\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: { author, content, emotion, id: dataId.current },\n    });\n\n    // useState 용\n    // const created_date = new Date().getTime();\n    // const newItem = {\n    //   author,\n    //   content,\n    //   emotion,\n    //   created_date,\n    //   id: dataId.current,\n    // };\n    dataId.current += 1;\n    //새로운 일기가 제일 위로 가야하므로 spread보다 앞에\n    // setData((data) => [newItem, ...data]);\n  }, []);\n\n  const onRemove = useCallback((targetId) => {\n    dispatch({ type: \"REMOVE\", targetId });\n\n    // useState 용\n    //   setData((data) => data.filter((it) => it.id !== targetId));\n  }, []);\n\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({ type: \"EDIT\", targetId, newContent });\n\n    // useState 용\n    // setData((data) =>\n    //   data.map((it) =>\n    //     it.id === targetId ? { ...it, content: newContent } : it\n    //   )\n    // );\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]);\n\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      {/* <Lifecycle /> */}\n      {/* <OptimizeTest /> */}\n      <DiaryEditor onCreate={onCreate} />\n      <div>전체 일기 : {data.length}</div>\n      <div>기분이 좋은 일기 개수 : {goodCount}</div>\n      <div>기분이 나쁜 일기 개수 : {badCount}</div>\n      <div>기분 좋은 일기 비율 : {goodRatio}</div>\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}