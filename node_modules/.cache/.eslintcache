[{"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/index.js":"1","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/App.js":"2","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/DiaryEditor.js":"3","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/OptimizeTest.js":"4","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/DiaryList.js":"5","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/Lifecycle.js":"6","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/DiaryItem.js":"7","/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/index.js":"8","/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/App.js":"9","/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/DiaryEditor.js":"10","/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/DiaryList.js":"11","/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/DiaryItem.js":"12"},{"size":432,"mtime":1649702576540,"results":"13","hashOfConfig":"14"},{"size":2400,"mtime":1649962062932,"results":"15","hashOfConfig":"14"},{"size":1770,"mtime":1649961925152,"results":"16","hashOfConfig":"14"},{"size":1005,"mtime":1649869781252,"results":"17","hashOfConfig":"14"},{"size":478,"mtime":1649961991146,"results":"18","hashOfConfig":"14"},{"size":566,"mtime":1649798218666,"results":"19","hashOfConfig":"14"},{"size":1851,"mtime":1649961950611,"results":"20","hashOfConfig":"14"},{"size":432,"mtime":1649702576540,"results":"21","hashOfConfig":"22"},{"size":2161,"mtime":1649962844512,"results":"23","hashOfConfig":"22"},{"size":1746,"mtime":1649962868010,"results":"24","hashOfConfig":"22"},{"size":478,"mtime":1649962901562,"results":"25","hashOfConfig":"22"},{"size":1828,"mtime":1649962877347,"results":"26","hashOfConfig":"22"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kjb2qt",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16z3ndz",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/index.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/App.js",["66","67","68"],[],"import React, {\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n  useEffect,\n} from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\nimport OptimizeTest from \"./OptimizeTest\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n\n    setData(initData);\n  };\n\n  //처음 렌더링 될 때 실행함\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = useCallback((author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    //새로운 일기가 제일 위로 가야하므로 spread보다 앞에\n    setData((data) => [newItem, ...data]);\n  }, []);\n\n  const onRemove = useCallback((targetId) => {\n    setData((data) => data.filter((it) => it.id !== targetId));\n  }, []);\n\n  const onEdit = useCallback((targetId, newContent) => {\n    setData((data) =>\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]);\n\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      {/* <Lifecycle />\n      <OptimizeTest /> */}\n\n      <DiaryEditor onCreate={onCreate} />\n      <div>전체 일기 : {data.length}</div>\n      <div>기분이 좋은 일기 개수 : {goodCount}</div>\n      <div>기분이 나쁜 일기 개수 : {badCount}</div>\n      <div>기분 좋은 일기 비율 : {goodRatio}</div>\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/DiaryEditor.js",["69"],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/OptimizeTest.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/DiaryList.js",[],[],["70","71"],"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/Lifecycle.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-optimize/src/DiaryItem.js",["72"],[],"import React, { useEffect, useRef, useState } from \"react\";\n\nconst DiaryItem = ({\n  onEdit,\n  onRemove,\n  author,\n  content,\n  created_date,\n  emotion,\n  id,\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n\n  const [localContent, setLocalContent] = useState(content);\n  const localContentInput = useRef();\n\n  const handleRemove = () => {\n    if (window.confirm(`${id}번째 일기를 정말 삭제하시겠습니까?`)) {\n      onRemove(id);\n    }\n  };\n\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content);\n  };\n\n  const handleEdit = () => {\n    if (localContent.length < 5) {\n      localContentInput.current.focus();\n      return;\n    }\n    if (window.confirm(`${id}번 째 일기를 수정하시겠습니까?`)) {\n      onEdit(id, localContent);\n      toggleIsEdit();\n    }\n  };\n\n  return (\n    <div className=\"DiaryItem\">\n      <div className=\"info\">\n        <span>\n          작성자 : {author} | 감정점수 : {emotion}\n        </span>\n        <br />\n        <span className=\"date\">{new Date(created_date).toLocaleString()}</span>\n      </div>\n      <div className=\"content\">\n        {isEdit ? (\n          <>\n            <textarea\n              ref={localContentInput}\n              value={localContent}\n              onChange={(e) => setLocalContent(e.target.value)}\n            />\n          </>\n        ) : (\n          <>{content}</>\n        )}\n      </div>\n      {isEdit ? (\n        <>\n          <button onClick={handleQuitEdit}>수정 취소</button>\n          <button onClick={handleEdit}>수정 완료</button>\n        </>\n      ) : (\n        <>\n          <button onClick={handleRemove}>삭제하기</button>\n          <button onClick={toggleIsEdit}>수정하기</button>\n        </>\n      )}\n    </div>\n  );\n};\nexport default React.memo(DiaryItem);\n","/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/index.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/App.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/DiaryEditor.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/DiaryList.js",[],[],"/Users/woo-jungkyun/Project/React_Study/simplediary-basic/src/DiaryItem.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":11,"column":8,"nodeType":"75","messageId":"76","endLine":11,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":12,"column":8,"nodeType":"75","messageId":"76","endLine":12,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":73,"column":6,"nodeType":"80","endLine":73,"endColumn":19,"suggestions":"81"},{"ruleId":"73","severity":1,"message":"82","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":27},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"73","severity":1,"message":"87","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},"no-unused-vars","'Lifecycle' is defined but never used.","Identifier","unusedVar","'OptimizeTest' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'useContext' is defined but never used.","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'useEffect' is defined but never used.",{"desc":"91","fix":"92"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data]",{"range":"93","text":"94"},[1789,1802],"[data]"]